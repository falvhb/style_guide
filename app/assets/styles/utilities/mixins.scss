@import 'utilities/variables';

// -----------------------------------------------------------------------------
// This file contains all application-wide Sass mixins.
// -----------------------------------------------------------------------------

/// This is intended to be an introduction paragraph to an article. It should not
/// be used for more than a single paragraph in a row.
/// @example markup - Introduction paragraph
///   <p class='type-intro'>Vier Tage lang haben drei Schneeschuhwanderer aus Tschechien im Salzburger Pinzgau im Winterraum einer Hütte in 2100 Metern Seehöhe ausgeharrt, weil sie nach einem massiven Wetterumschwung nicht mehr absteigen konnten.</p>
@mixin type-intro {
  @include supporting-font;
  font-size: 22px;
  line-height: 1.41;
  font-weight: 700;
  letter-spacing: 0.2px;

  @include media('≤mobile-portrait') {
    font-size: 18px;
  }
}


/// This is intended to be the default typographic styles for paragraphs, lists
/// and basically the core content of an article.
/// @example markup - Copy text
///  <p class='type-copy'>Die Männer seien am vergangen Freitagmorgen zu der Tour aufgebrochen, die sie zum Ingolstädterhaus auf 2119 Meter führen sollte, teilte die Polizei mit. Gegen 23.00 Uhr erreichten sie die im Winter nicht bewirtschaftete Hütte und quartierten sich im Winterraum ein, der frei zugänglich ist, über zwölf Schlafplätze, aber keine Verpflegung verfügt.</p>
@mixin type-copy {
  font: 20px / 1.41 $text-font-stack;
  letter-spacing: 0.3px;

  @include media('≤mobile-portrait') {
    font-size: 18px;
  }
}


/// Alternate copy text.
/// @todo To be determined.
/// @example markup - Alternate copy text
///  <p class='type-copy-alternate'>Die Redaktion sucht nach Augenzeugen, die am vergangenen Dienstag den Unfall am Marktplatz in Aarau beobachet haben. Ein schwarzer Mercedes war an einen Poller geprallt und hatte sich überschlagen, 2 Passanten wurden leicht verletzt.</p>
@mixin type-copy-alternate {
  @include supporting-font;
  font-size: 16px;
  line-height: 1.5;

  @include media('≤mobile-portrait') {
    font-size: 15px;
  }
}

/// Alternate headline text.
/// @todo To be determined.
/// @example markup - Alternate copy text
///  <h2 class='type-headline-alternate'>Die Redaktion sucht nach Augenzeugen, die am vergangenen Dienstag den Unfall am Marktplatz in Aarau beobachet haben. Ein schwarzer Mercedes war an einen Poller geprallt und hatte sich überschlagen, 2 Passanten wurden leicht verletzt.</h2>
@mixin type-headline-alternate {
  @include supporting-font;
  font-size: 18px;
  line-height: 1.333;
  font-weight: 700;
}



/// This is intended to be used for the main headline, such as article's.
/// @example markup - Primary headline
///  <h1 class='type-h1'>Staatsanwaltschaft ermittelt nach Brückeneinsturz gegen Unbekannt</h1>
@mixin type-h1 {
  font: 48px / 1.125 $headline-font-stack;
  letter-spacing: 0.9px;

  @include media('≤mobile-portrait') {
    font-size: 26px;
  }
}


/// This is intended to be used when `type-h1` is a bit too *in yo' face*.
/// @example markup - Secondary headline
///  <h2 class='type-h2'>Staatsanwaltschaft ermittelt nach Brückeneinsturz gegen Unbekannt</h2>
@mixin type-h2 {
  font: 32px / 1.25 $headline-font-stack;
  letter-spacing: 0.6px;
  margin-bottom: 15px;

  @include media('≤mobile-portrait') {
    font-size: 22px;
  }
}


/// This is intended to be used when `type-h2` is a bit too *in yo' face*.
/// @example markup - Tertiary headline
///  <h3 class='type-h3'>Staatsanwaltschaft ermittelt nach Brückeneinsturz gegen Unbekannt</h3>
@mixin type-h3 {
  font: 24px / 1.25 $headline-font-stack;
  letter-spacing: 0.6px;
  margin-bottom: 15px;

  @include media('≤mobile-portrait') {
    font-size: 18px;
  }
}


/// This is intended to style titles that are part of secondary content, for
/// instance related content within an article.
/// @example markup - Mini headline
///  <h4 class='type-h4'>Staatsanwaltschaft ermittelt nach Brückeneinsturz gegen Unbekannt</h4>
@mixin type-h4 {
  font: 18px / 1.3333 $headline-font-stack;
  letter-spacing: 0.6px;
}


/// This is intended to style blockquotes. It should not be used on inline quotes.
/// @example markup - Blockquote
///  <blockquote class='type-blockquote'>«Am Sonntag wurden die Tschechen im Alter von 32, 35 und 38 Jahren dann vom Wetterumschwung überrascht»</blockquote>
@mixin type-blockquote {
  font: 32px / 1.1875 $headline-font-stack;
  letter-spacing: 0.6px;
}


/// This is intended to be used for captions such as under an image or video.
/// @example markep - Caption
///  <p class='type-caption'>Zunzger Kinder im Fasnachtsfieber</p>
@mixin type-caption {
  @include supporting-font;
  font-size: 16px;
  line-height: 1.375;
  letter-spacing: 0.2px;
  color: $medium-grey;


}


/// This is intended to be used for tiny details, such as secondary labels
/// or meta data on articles like the author name or the date.
/// @example markup - Detail information
///  <p class='type-detail'>Abonnieren</p>
@mixin type-detail {
  @include supporting-font;
  font-size: 14px;
  line-height: 1.3333;
  letter-spacing: 0.1px;
  color: $medium-grey;


}


/// This is intended to be a word, phrase or name to give context to an article
/// or a quote.
/// @see {mixin} type-blockquote
/// @example markup - Catchword
///  <p class='type-catchword'>DEUTSCHLAND</p>
@mixin type-catchword {
  @include supporting-font;
  font-size: 13px;
  line-height: 1.23;
  text-transform: uppercase;
  font-weight: 700;
  letter-spacing: 1.8px;
  color: $medium-grey;
}


/// Mixin to help specifying styles for all kinds of interaction at once
/// @param {Bool} $self [false] - Whether to include default state as well
@mixin on-interaction($self: false) {
  @if $self {
    &,
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  } @else {
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  }
}

/// Mixin used to pull or push and element in at the edges, in-line with the container padding
@mixin edges($direction: 'pull', $breakpoint: 'both', $method: 'margin') {

  @if $direction == 'pull' {
    $factor: -1;
  } @else if $direction == 'push' {
    $factor: 1;
  }

  @if $breakpoint == 'both' or $breakpoint == 'mobile' {
    @include media('<=mobile-portrait') {
      #{$method}-left: $factor * $container-spacing;
      #{$method}-right: $factor * $container-spacing;
    }
  }

  @if $breakpoint == 'both' or $breakpoint == 'desktop' {
    @include media('>mobile-portrait') {
      #{$method}-left: $factor * ($container-spacing * 2);
      #{$method}-right: $factor * ($container-spacing * 2);
    }
  }

}

/// Helper for `island` mixin for DRY padding values
@mixin island-padding($padding) {
  padding: $padding;

  &::before {
    right: $padding;
    left: $padding;
  }
}

/// Create an island with blocked-off content and a top border
@mixin island($color: $light-blue, $small-padding: $container-spacing, $large-padding: false) {

  background: $very-light-grey;
  position: relative;

  &::before {
    position: absolute;
    content: '';
    display: block;
    top: 0;
    height: 4px;
    background-color: $color;
  }

  @if $small-padding == $large-padding or $large-padding == false {
    @include island-padding($small-padding);
  } @else {

    @include media('<=mobile-portrait') {
      @include island-padding($small-padding);
    }

    @include media('>mobile-portrait') {
      @include island-padding($large-padding);
    }

  }

}

/// Slightly lighten a color
/// @access public
/// @param {Color} $color - color to tint
/// @param {Number} $percentage - percentage of `$color` in returned color
/// @return {Color}
@function tint($color, $percentage) {
  @return mix(white, $color, $percentage);
}


/// Slightly darken a color
/// @access public
/// @param {Color} $color - color to shade
/// @param {Number} $percentage - percentage of `$color` in returned color
/// @return {Color}
@function shade($color, $percentage) {
  @return mix(black, $color, $percentage);
}

/// Overlay Gradient for images for a better contrast to the text on the image
/// @param {Number} $percentage - percentage of top position
@mixin image-gradient($percentage: 65%) {
  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0) $percentage, #000 100%);
}

/// Helper for thinner text, only supported by -moz-osx and -webkit
@mixin font-smoothing {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/**
 * Loading spinner
 * 1. Absolute centering of the loader
 * 2. Displayed
 * 3. On top of content
 */

/// Transition duration for fade in
/// @type Duration
/// @group images
$image-transition: 0.25s;

/// Loader size
/// @type Length
/// @group images
$image-loader-size: 30px;

/// CSS based loading Spinner for loading animations
/// @access public
@mixin loading-spinner {
  &::after {
    content: '';
    width: $image-loader-size;
    height: $image-loader-size;
    position: absolute; /* 1 */
    top: 50%; /* 1 */
    left: 50%; /* 1 */
    margin: -($image-loader-size / 2); /* 1 */
    opacity: 1; /* 2 */
    z-index: 1; /* 3 */
    border: 5px solid #b5b5b5;
    border-right-color: transparent;
    border-radius: 50%;
    transition: opacity $image-transition;
    animation: responsive-image-loader 1s linear infinite;
  }
}


@mixin slider-loading($wrapper, $inner) {
  .#{$wrapper} {
    position: relative;

    &::after {
      opacity: 0;
    }
  }

  .#{$inner} {
    transition: $image-transition;
  }

  .is-slider-loading .#{$wrapper},
  .is-slider-resizing .#{$wrapper} {
    @include loading-spinner;
  }

  .is-slider-loading .#{$inner},
  .is-slider-resizing .#{$inner} {
    opacity: 0;
  }
}

// IE9 Supporting font replacement
@mixin supporting-font {
  font-family: $supporting-font-stack;

  .lte-ie9 & {
    font-family: 'Helvetica', Arial, sans-serif;
  }
}

// -----------------------------------------------------------------------------
// LAYOUT MIXINS
// -----------------------------------------------------------------------------
@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

@mixin content-width($method: 'margin') {
  @include media('>desktop-laptop') {
    #{$method}-right: $sidebar-width + $container-spacing;
  }
}

@mixin article-body-width($method: 'margin') {
  @include media('>desktop-laptop') {
    #{$method}-right: $sidebar-width + (3 * $container-spacing);
  }
}

@mixin container-gutters($size: 'small') {
  @if ($size == 'small') {
    $gutter: $container-spacing;
  } @else {
    $gutter: $container-spacing * 2;
  }

  padding-left: $gutter;
  padding-right: $gutter;
}

@mixin main-layout {
  width: 100%;

  @include media('<=tablet-portrait') {
    max-width: 650px;
  }

  @include media('>tablet-portrait', '<=desktop-laptop') {
    width: 80%;
  }

  @include media('<=desktop-laptop') {
    margin-left: auto;
    margin-right: auto;
  }
}

/// Activate a grid layout
/// @access public
/// @param {Length} $spacing - distance between grid cells
@mixin grid-wrap($spacing: $container-spacing) {
  overflow: hidden;
  margin-left: -$spacing;
}

/// Activate a grid cell
/// @access public
/// @param {Length} $spacing - distance between grid cells
@mixin grid-cell($spacing: $container-spacing) {
  float: left;
  padding-left: $spacing;
}


/// Fit image to box - stretch image up to fill new ratio
/// @access public
/// @param {List} $current-ratio - current ratio of image in the format (W, H)
/// @param {List} $new-ratio - intended new ratio of image in the format (W, H)
@mixin fit-image-to-box($current-ratio, $new-ratio) {
  $current-width: nth($current-ratio, 1);
  $current-height: nth($current-ratio, 2);

  $new-width: nth($new-ratio, 1);
  $new-height: nth($new-ratio, 2);

  $current-padding: ($current-height / $current-width) * 100;
  $new-padding: ($new-height / $new-width) * 100;

  $image-width: ($new-padding / $current-padding) * 100;
  $extra-width: $image-width - 100;
  $margin-left: $extra-width / 2;

  .responsive-image {
    padding-bottom: $new-padding * 1%;
  }

  .picture__source {
    width: $image-width * 1%;
    margin-left: -$margin-left * 1%;
    max-width: none;
  }
}
